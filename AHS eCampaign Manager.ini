AHS eCampaign Manager
├── ECampaign.BAL
│   ├── Bases(.Net specific)
│   │   └── IRequestHandler.cs(.Net specific)
│   ├── Bootstrapper.cs(.Net specific)(for multi project)
│   ├── ECampaign.BAL.csproj(.Net specific)
│   ├── Handler
│   │   ├── CreateCompanyHandler.cs
│   │   └── GetCompanyListHandler.cs
├── ECampaign.DAL
│   ├── Bases(.Net specific)
│   │   ├── ICompanyRepository.cs(.Net specific)
│   │   ├── IRepositoryBase.cs(.Net specific)
│   │   └── IUnitOfWork.cs(.Net specific)
│   ├── Bootstrapper.cs(.Net specific)
│   ├── Configuration
│   │   └── CompanyConfiguration.cs(db connection orm code will be staying here.)
│   ├── ECampaign.DAL.csproj(.Net specific)
│   ├── Repositories
│   │   ├── CompanyRepository.cs
│   │   ├── RepositoryBase.cs
│   │   └── UnitOfWork.cs
│   └── RepositoryContext.cs(.Net/entity specific)
├── ECampaign.ECampaignAPI
│   ├── ActionFilters
│   │   ├── LogActionFilterAttribute.cs
│   │   └── ValidationFilterAttribute.cs
│   ├── appsettings.Development.json(.Net specific)
│   ├── appsettings.json(.Net specific)
│   ├── Bootstrapper.cs(.Net specific)
│   ├── Controllers
│   │   ├── CompanyController.cs
│   │   └── ReleaseController.cs
│   ├── ECampaign.ECampaignAPI.csproj(.Net specific)
│   ├── ECampaign.ECampaignAPI.sln(.Net specific)
│   ├── Helpers
│   │   ├── ExceptionMiddleware.cs
│   │   ├── GuidTracer.cs
│   │   ├── GuidTracerMiddleware.cs
│   │   ├── RequestService.cs
│   │   └── ServiceExtensions.cs
│   ├── nlog.config(.Net specific)
│   ├── Program.cs
│   ├── Properties(.Net specific)
│   │   └── launchSettings.json(.Net specific)
│   └── wwwroot(.Net specific)
│       └── host.txt(.Net specific)
├── ECampaign.Model
│   ├── Attributes(.Net specific)
│   │   ├── JsonIgnoreUpdateAttribute.cs(.Net specific)
│   │   └── SPListColumnNameAttribute.cs(.Net specific)
│   ├── Bases(.Net specific)
│   │   ├── IRequest.cs(.Net specific)
│   │   └── ISPList.cs(.Net specific)
│   ├── Bootstrapper.cs(.Net specific)
│   ├── Commands
│   │   └── CreateCompanyCommand.cs
│   ├── Company.cs
│   ├── DTOs
│   │   ├── APIResponse.cs
│   │   ├── AppSettings.cs
│   │   ├── CompanyDto.cs
│   │   ├── ErrorDetails.cs
│   │   └── ReleaseVersion.cs
│   ├── ECampaign.Model.csproj(.Net specific)
│   ├── Helpers
│   │   ├── Constants.cs
│   │   └── MappingProfile.cs
│   └── RequestFeatures
│       ├── MetaData.cs
│       ├── PagedList.cs
│       └── RequestParameters.cs
├── ECampaign.sln(.Net specific)
└── UpgradeLog.htm(.Net specific)





.csproj-packages installed>requirements.txt

1)__init__.py does the work of Bootstrapper.cs which is connector.
2)bases gives the blueprint of interfaces. interfaces in base folder.
3)cant really build from multiple solution.
4)Controller part is good

Important: its multiple solution.so make comparison between solution vs solution not solution vs solutions.

actionfilters are specific to asp.net core,dont have that in python.-gurnoor

middleware in Helpers.

dont need wwwroot.

peroperties are nothing to do with code.its specific to IDE.

startup will not be needed beacsue its a background servuce.thats only for ecampaign.

dont need logging.config beacuse I have the ConfigLogger class created which ejectes the logger objetc.

RequetsFeatures:models
Queries:Models too
Models:entity framework objects

Herlpers in models:helper

Enums:we can clal in other classes
Dtos:return data in the api. exposing only certain data from original models.
make whatever folders insdie of here in models or class.

DAL:
Repo:all crud ops goes into this.
Migrations and COnfigurations are entity frmaework related stuff so ddont worry abotu them. interfcaes and bases 

Attributes:adding attributes to the route attribute.



Validators are python specific


depdenecies folder for depdenecies injection are also python specific.


.csproj is .net specific, we have requriements for sorting python library version.


for only db oeprations only
=>command-when the request map the request to the command.
we define the query params in a funciton and use it in the query parmaaters section and thats all to command.
its only used for create,update and delete. =>we use commands only here.
=>when we just reading the data from db,we make use of queries and thats all to that.

├── ECampaign.SMSListenerAPI
│   ├── ActionFilters
│   │   ├── LogActionFilterAttribute.cs
│   │   └── ValidationFilterAttribute.cs
│   ├── appsettings.Development.json
│   ├── appsettings.json
│   ├── Bootstrapper.cs
│   ├── Controllers
│   │   ├── CompanyController.cs
│   │   └── ReleaseController.cs
│   ├── ECampaign.SMSListenerAPI.csproj
│   ├── Helpers
│   │   ├── ExceptionMiddleware.cs
│   │   ├── GuidTracer.cs
│   │   ├── GuidTracerMiddleware.cs
│   │   ├── RequestService.cs
│   │   └── ServiceExtensions.cs
│   ├── nlog.config
│   ├── Program.cs
│   ├── Properties
│   │   └── launchSettings.json
│   └── wwwroot
│       └── host.txt



 Configuration
│   │   └── CompanyConfiguration.cs
contains some db initialisation scripts.